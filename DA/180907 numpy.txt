[python-analysis]▶
1. 집계함수 
 - sum()
 axis=지정, 기본값 (전체)
  1) 0 -> 행기준 동일 index 합
  2) 1 -> 열기준 동일 index 합
 ▶ 차원감소

 - max()
 1) axis=None -> 전체에서 최댓값
 2) axis=1 -> 열 기준 최댓값
 3) axis=2 -> 행 기준 최댓값

 - cumsum()
 1) axis=0 -> 행 기준 동일 인덱스 누적값
 2) axis=1 -> 열 기준 동일 인덱스 누적값

 - sort()
  1) axis=0 -> 행기준 같은 index
  2) axis=1 -> 열기준 같은 index

  - argsort(index번호리턴)
  ▶ sort 기본 내장 -> 원본데이터를 변경
  ▶ np.sort -> 사본 리턴
  ▶ argsort(-var) -> inverse sort

2. 복사
 - np.copy(array) -> call by value

3. numpy 3차원
 ▶ (행, 열, 깊이)
  - 사면체로 생각
  ▶ 행 axis 시 해당 행을 제외한 나머지 index

4. 불리언 색인
 ▶ var=arr>~
  -> T/F 행렬
 ▶ df의 1열은 series // values -> array

5. 펜시 인덱싱
  ▶ argsort, argmax... -> indexing 번호 리턴

6. ravle()
 ▶ 1차원 전환
 ▶ resize(): 배열 크기 변경
 ▶ reshpae(): 배열의 형태만 변경

7. np.append(a_rr, b_rr)
 ▶ 배열합치기 -> 1차원 배열로
  - axis 부여시 -> 기존 shape 유지

8. np.insert(arr, index, value)
 ▶ axis=0/axis=1: 행 방향 합치기 // 열 방향 합치기
    ▶ 기존 차원 유지

9. np.delete(arr, index, axis)

10. 배열간 결합 (oncatenate, vsatck, hstack)
  ▶ np.concatenate -> axis=0
  ▶ np.vsatck
  ▶ np.hstatck
  ▶ np.hsplit(array, 숫자) -> 숫자만큼 분리
  ▶ np.vsplit(array, 숫자)

11. transpose
 ▶ 피봇을 중심으로 인덱스 변환
 ▶ np.transpose() // array.T

12. empty_like(x)
 ▶ shape만 지정시, random
  - not zeors

13. np.tile(array, (행, 열))

14. np.prod(array, axis) -> 행렬 요소 곱

15. as.type(np.type) 